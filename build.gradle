plugins {
    id 'war'
    id 'application'
    id 'maven-publish'
    id 'org.springframework.boot' version '2.7.3'
    id 'org.jetbrains.kotlin.jvm' version '1.7.10'
    id 'org.jlleitschuh.gradle.ktlint' version '11.0.0'
    id 'io.spring.dependency-management' version '1.0.13.RELEASE'
}

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web:2.7.3'
    implementation 'org.springframework.boot:spring-boot-configuration-processor:2.7.3'
    implementation 'org.projectlombok:lombok:1.18.24'
    implementation 'org.apache.maven.plugins:maven-compiler-plugin:3.10.1'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:2.7.3'
    implementation 'mysql:mysql-connector-java:8.0.30'
    implementation 'org.flywaydb:flyway-mysql:9.3.0'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.7.10'
    implementation 'org.jetbrains.kotlin:kotlin-reflect:1.7.10'
    runtimeOnly 'org.springframework.boot:spring-boot-devtools:2.7.3'
    testImplementation 'org.springframework.boot:spring-boot-starter-test:2.7.3'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc:2.0.6.RELEASE'
    testImplementation 'com.h2database:h2:2.1.214'
    testImplementation 'io.mockk:mockk:1.12.5'
    testImplementation 'com.ninja-squad:springmockk:3.1.1'
    testImplementation 'org.jetbrains.kotlin:kotlin-test:1.7.10'
    providedCompile 'org.springframework.boot:spring-boot-starter-tomcat:2.7.3'
}

group = 'br.com.fiap'
version = '0.0.1-SNAPSHOT'
description = 'abctechapi'
mainClassName = 'br.com.fiap.abctechapi.AbctechapiApplicationKt'
java.sourceCompatibility = JavaVersion.VERSION_1_8

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

test {
    useJUnitPlatform()
}

ktlint {
    debug = false
    verbose = false
}

task compile {
    dependsOn(compileKotlin)
    dependsOn(compileTestKotlin)
}

task lint {
    dependsOn(ktlintCheck)
}

task generateArtifact {
    dependsOn(bootWar)
}